# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import worker_pb2 as worker__pb2


class Worker_gRPCStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetStatus = channel.unary_unary(
                '/worker.Worker_gRPC/GetStatus',
                request_serializer=worker__pb2.Request.SerializeToString,
                response_deserializer=worker__pb2.Status.FromString,
                )
        self.GetVideo = channel.unary_stream(
                '/worker.Worker_gRPC/GetVideo',
                request_serializer=worker__pb2.Source.SerializeToString,
                response_deserializer=worker__pb2.Result.FromString,
                )
        self.RestreamVideo = channel.unary_unary(
                '/worker.Worker_gRPC/RestreamVideo',
                request_serializer=worker__pb2.Source.SerializeToString,
                response_deserializer=worker__pb2.Source.FromString,
                )


class Worker_gRPCServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetStatus(self, request, context):
        """gets worker status
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVideo(self, request, context):
        """streams from elsewhere, still gets video (frames?) after nn
        Source is either ip (of a camera) or dir
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RestreamVideo(self, request, context):
        """or restreams it into the sink
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_Worker_gRPCServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStatus,
                    request_deserializer=worker__pb2.Request.FromString,
                    response_serializer=worker__pb2.Status.SerializeToString,
            ),
            'GetVideo': grpc.unary_stream_rpc_method_handler(
                    servicer.GetVideo,
                    request_deserializer=worker__pb2.Source.FromString,
                    response_serializer=worker__pb2.Result.SerializeToString,
            ),
            'RestreamVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.RestreamVideo,
                    request_deserializer=worker__pb2.Source.FromString,
                    response_serializer=worker__pb2.Source.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'worker.Worker_gRPC', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Worker_gRPC(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker_gRPC/GetStatus',
            worker__pb2.Request.SerializeToString,
            worker__pb2.Status.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/worker.Worker_gRPC/GetVideo',
            worker__pb2.Source.SerializeToString,
            worker__pb2.Result.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def RestreamVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/worker.Worker_gRPC/RestreamVideo',
            worker__pb2.Source.SerializeToString,
            worker__pb2.Source.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
